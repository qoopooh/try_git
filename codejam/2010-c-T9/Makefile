#############################################################################
# Makefile for building: network.exe
# Generated by qmake (2.01a) (Qt 4.7.4) on: Thu Jul 12 11:47:35 2012
# Project:  network.pro
# Template: app
# Command: /usr/lib/qt4/bin/qmake -o Makefile network.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
#DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -O2 -Wall -Wextra -D_REENTRANT $(DEFINES)
#INCPATH      = -I../sqlite-a -IH:\svn\mosync\cpp\sqlite\boost_1_52_0 #windows 7 mingw
INCPATH       = -I/opt/local/include
LINK          = g++
#LFLAGS        = -Wl,-O1
LFLAGS        = -Wl
#LIBS          = -L../sqlite-a -lsqlite3 #windows 7 mingw
#LIBS          = -lsqlite3 -lxerces-c -lboost_system -lboost_filesystem
#LIBS          = -lboost_system
AR            = ar cqs
RANLIB        = 
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = obj
OUTPUT_DIR    = exe

####### Files
#gen-array.o \

OBJECTS       = $(addprefix $(OBJECTS_DIR)/, \
	t9.o \
	main.o \
	)
TARGET        = $(addprefix $(OUTPUT_DIR)/, t9)

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): | $(OUTPUT_DIR)
$(OUTPUT_DIR):
	mkdir $(OUTPUT_DIR)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
$(OBJECTS): | $(OBJECTS_DIR)
$(OBJECTS_DIR):
	mkdir $(OBJECTS_DIR)

clean:
	-$(DEL_FILE) $(OBJECTS)
	rm -rf $(OBJECTS_DIR)
	rm -rf $(OUTPUT_DIR)

####### Compile

$(OBJECTS_DIR)/%.o: %.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

####### Install

